#!/bin/bash
# shellcheck disable=1111,2034

text=$(cat ~/Documents/obsidian/Christianity/Bible/LSB/Reading/"${1}".md)

width=$(tput cols)
hline=$(printf '=%.0s' $(seq 1 $width); echo)
# fit to terminal width
if [[ $2 != '' ]]; then
  title="$(echo "$text" | grep '^# .*' | sed 's/# //'):$2"
else
  title="$(echo "$text" | grep '^# .*' | sed 's/# //')"
fi

# remove headings
text=$(echo "$text" | sed -E '1,3{d}')
text=$(echo "$text" | sed -E 's/^## (.*)//')
text=$(echo "$text" | sed -E 's/^(# |## |#### |##### ).*//')

# format verses
text=$(echo "$text" | sed -E 's/###### (¶* *[0-9][0-9][0-9])/\1 templine/g')
text=$(echo "$text" | sed -E 's/###### (¶* *[0-9][0-9])/\1  templine/g')
text=$(echo "$text" | sed -E 's/###### (¶* *[0-9])/\1   templine/g')
text=$(echo "$text" | sed -E ':a;$!{N;s/templine\n//;ba;}')
text=$(echo "$text" | sed -E 's/¶ //g')

# fix/remove markdown syntax
text=$(echo "$text" | sed -E 's/—/ - /g')
text=$(echo "$text" | sed -E 's/\*//g')
text=$(echo "$text" | sed -E 's/\\//g')
text=$(echo "$text" | sed -E 's/\[//g')
text=$(echo "$text" | sed -E 's/\]//g')
text=$(echo "$text" | sed -E 's/^\^[0-9].*//g')
text=$(echo "$text" | sed -E 's/\^[0-9]//g')
text=$(echo "$text" | sed -E 's/^> /     /g')
text=$(echo "$text" | sed -E 's/> / /g')

# add space before lines that are not on the same line as the verse num
text=$(echo "$text" | sed -E 's/(^[^0-9 ])/    \1/g')

for i in {1..5}; do
  # add newline when width is a space
  for j in {1..3}; do text=$(echo "$text" | sed -E "s/^(.{$((width - 1))}) /\1\n    /"); done
  # hyphenate words that are in width
  for j in {1..3}; do text=$(echo "$text" | sed -E "s/^(.{$((width - 2))})([A-Za-z0-9])([A-Za-z0-9])([^ ])/\1\2-\n    \3\4/"); done
  # move char to newline if width-1 is a space
  for j in {1..3}; do text=$(echo "$text" | sed -E "s/^(.{$((width - 2))}) ([A-Za-z0-9“‘])/\1\n    \2/"); done
  # add newline right after punctuation
  for j in {1..3}; do text=$(echo "$text" | sed -E "s/^(.{$((width - 1))})([!?.,”’;:])/\1\2\n    /"); done
  # fix verses that didn't get move to newline
  for j in {1..3}; do text=$(echo "$text" | sed -E "s/^(.{$((width))}) /\1\n    /"); done
  for j in {1..3}; do text=$(echo "$text" | sed -E "s/^(.{$((width))})([!?.,”’;:])/\1\n    \2/"); done
  for j in {1..3}; do text=$(echo "$text" | sed -E "s/^(.{$((width - 1))}) /\1\n    /"); done
  # fix verse number spacing
  text=$(echo "$text" | sed -E 's/([0-9]{1})    /\1   /g')
  text=$(echo "$text" | sed -E 's/([0-9]{2})   /\1  /g')
  text=$(echo "$text" | sed -E 's/([0-9]{3})  /\1 /g')
  # add newline if width+1 is a space
  for j in {1..3}; do text=$(echo "$text" | sed -E "s/^(.{$((width))}) /\1\n    /"); done
done

# remove newlines to make copying verses easier (by triple click)

# fix spacing
text=$(echo "$text" | sed -E 's/^ {2,3}([^ ])/    \1/g')
text=$(echo "$text" | sed -E 's/^ {5,}([^ ])/    \1/g')

# replace smart smart with dumb quotes
# right
text=$(echo "$text" | sed -E "s/”/\"/g")
text=$(echo "$text" | sed -E "s/’/\'/g")
# left
text=$(echo "$text" | sed -E "s/“/\"/g")
text=$(echo "$text" | sed -E "s/‘/\'/g")

# remove blank lines
text=$(echo "$text" | sed -E 's/ *$//g')
text=$(echo "$text" | sed -E '/^$/d')
text=$(echo "$text" | sed -E '/^ *>* *$/d')

if [[ $2 != '' ]]; then
  echo $hline
  padding=$(( ($width + ${#title}) / 2 ))
  printf "%*s\n" $padding "$title"
  echo $hline
  echo "${text}" | awk "/^$(($2 - 2)) /{print; flag=1; next} /^$(($2 - 1)) /{flag=0} flag"
  echo "${text}" | awk "/^$(($2 - 1)) /{print; flag=1; next} /^$(($2 - 0)) /{flag=0} flag"
  echo "${text}" | awk "/^$(($2 - 0)) /{print \"\033[01;31m\" \$0; flag=1; next} /^$(($2 + 1)) /{flag=0} flag"
  echo -en "\033[0m"
  echo "${text}" | awk "/^$(($2 + 1)) /{print; flag=1; next} /^$(($2 + 2)) /{flag=0} flag"
  echo "${text}" | awk "/^$(($2 + 2)) /{print; flag=1; next} /^$(($2 + 3)) /{flag=0} flag"
  #echo "$text" | GREP_COLORS='ms=01;31' grep -E --color=always "^${2} .*" -A2 -B2 | less -RFX
else
  output="$(
    echo $hline
    padding=$(( ($width + ${#title}) / 2 ))
    printf "%*s\n" $padding "$title"
    echo $hline
    echo "$text"
  )"
  echo "$output" | less -FX
fi
